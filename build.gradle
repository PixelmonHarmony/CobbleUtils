plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

/*ext {
    kyoriDependencies = [
            "net.kyori:examination-api:1.3.0",
            "net.kyori:examination-string:1.3.0",
            "net.kyori:adventure-api:4.14.0",
            "net.kyori:adventure-key:4.14.0",
            "net.kyori:adventure-nbt:4.14.0",
            "net.kyori:adventure-text-serializer-plain:4.14.0",
            "net.kyori:adventure-text-serializer-legacy:4.14.0",
            "net.kyori:adventure-text-serializer-gson:4.14.0",
            "net.kyori:adventure-text-serializer-json:4.14.0",
            "net.kyori:adventure-text-minimessage:4.14.0",
            "net.kyori:adventure-text-logger-slf4j:4.14.0",
            "net.kyori:event-api:5.0.0-SNAPSHOT"
    ]
}

dependencies {
    List.of(
            "net.kyori:examination-api:1.3.0",
            "net.kyori:examination-string:1.3.0",
            "net.kyori:adventure-api:4.14.0",
            "net.kyori:adventure-key:4.14.0",
            "net.kyori:adventure-nbt:4.14.0",
            "net.kyori:adventure-text-serializer-plain:4.14.0",
            "net.kyori:adventure-text-serializer-legacy:4.14.0",
            "net.kyori:adventure-text-serializer-gson:4.14.0",
            "net.kyori:adventure-text-serializer-json:4.14.0",
            "net.kyori:adventure-text-minimessage:4.14.0",
            "net.kyori:adventure-text-logger-slf4j:4.14.0",
            "net.kyori:event-api:5.0.0-SNAPSHOT"
    ).forEach {
        (it)
    }
}*/

// Ensure the generateChangelog task runs before the build task in all subprojects
subprojects {
    apply plugin: "java"
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: "org.jetbrains.kotlin.jvm"

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.mod_version/$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        maven {
            url "https://maven.nucleoid.xyz/"
            name "Nucleoid"
        }
        mavenCentral()
        maven {
            name = "sonatype-oss-snapshots1"
            url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://maven.impactdev.net/repository/development/"
        }
        maven {
            url = uri("https://cursemaven.com")
            content {
                includeGroup("curse.maven")
            }
        }
        mavenCentral()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.officialMojangMappings()
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
                // Attach the generated changelog as an artifact
                artifact("${rootProject.buildDir}/changelog/CHANGELOG-${rootProject.version}.md") {
                    classifier "changelog"
                }
            }
        }

        repositories {
            // Add repositories to publish to here.
        }
    }
}
